version: '3.8'

services:
  # Host Application (Main Dashboard)
  host-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_DIRECTUS_API=${NEXT_PUBLIC_DIRECTUS_API}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=http://localhost:3000
      - AUTH_GITHUB_ID=${AUTH_GITHUB_ID}
      - AUTH_GITHUB_SECRET=${AUTH_GITHUB_SECRET}
      - NEXT_PUBLIC_SITE_NAME=${NEXT_PUBLIC_SITE_NAME:-"Micro Frontend Dashboard"}
      - NEXT_PUBLIC_SITE_DESCRIPTION=${NEXT_PUBLIC_SITE_DESCRIPTION:-"A modern micro frontend architecture"}
      # Micro Frontend URLs
      - CHILD_APP_URL=http://child-app:3001
      - USER_MANAGEMENT_URL=http://user-management:3002
    networks:
      - microfrontend-network
    depends_on:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.host-app.rule=Host(`localhost`)"
      - "traefik.http.routers.host-app.entrypoints=web"
      - "traefik.http.services.host-app.loadbalancer.server.port=3000"

  # Example Child App 1 (uncomment when you create it)
  # child-app:
  #   build:
  #     context: ./child-apps/child-app
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3001:3001"
  #   environment:
  #     - NODE_ENV=production
  #     - PORT=3001
  #   networks:
  #     - microfrontend-network
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.child-app.rule=Host(`child-app.localhost`)"
  #     - "traefik.http.routers.child-app.entrypoints=web"
  #     - "traefik.http.services.child-app.loadbalancer.server.port=3001"

  # Example Child App 2 (uncomment when you create it)
  # user-management:
  #   build:
  #     context: ./child-apps/user-management
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3002:3002"
  #   environment:
  #     - NODE_ENV=production
  #     - PORT=3002
  #   networks:
  #     - microfrontend-network
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.user-management.rule=Host(`user-management.localhost`)"
  #     - "traefik.http.routers.user-management.entrypoints=web"
  #     - "traefik.http.services.user-management.loadbalancer.server.port=3002"

  # Reverse Proxy for routing
  traefik:
    image: traefik:v3.0
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--log.level=INFO"
    ports:
      - "80:80"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - microfrontend-network

  # Optional: Database for your applications
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: microfrontend_db
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - microfrontend-network

  # Optional: Redis for caching/session management
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - microfrontend-network

networks:
  microfrontend-network:
    driver: bridge

volumes:
  postgres_data: 
